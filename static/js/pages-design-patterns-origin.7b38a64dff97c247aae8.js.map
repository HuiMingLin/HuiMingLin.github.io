{"version":3,"sources":["webpack:///./pages/design-patterns/origin.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName"],"mappings":"66CAQqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WADDC,EAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,iBAAvD,gBACrCL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,GACtCE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,cACrDN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,gvBAIAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,cACrDN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,8jBAGAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,cACrDN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,0OAEAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,cACrDN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,yZAGAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,cACrDN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,6RAEAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,cACrDN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,ieAGAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,cACrDN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD","file":"static/js/pages-design-patterns-origin.839e1cf0.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"起源\"}}>{`起源`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`设计模式并非是软件开发的专业术语。实际上，“模式”最早诞生于建筑学。\n20世纪70年代 哈佛大学建筑学博士Christopher Alexander和他的研究团队花了约20年的时间，\n研究了为解决同一个问题而设计出的不同建筑结构，从中发现了那些高质量设计中的相似性，并且用“模式”来指 代这种相似性。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`受Christopher Alexander工作的启发，Erich Gamma、Richard Helm、Ralph Johnson、John Vlissides四人(人称Gang Of Four ，GoF)\n把这种“模式”观点应用于面向对象的软件设计中， 并且总结了23种常见的软件开发设计模式，录入《设计模式:可复用面向对象软件的基础》一书。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`设计模式的定义是:在面向对象软件设计过程中针对特定问题的简洁而优雅的解决方案。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`通俗一点说，设计模式是在某种场合下对某个问题的一种解决方案。\n如果再通俗一点说，设计模式就是给面向对象软件开发中的一些好的设计取个名字。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`在 JavaScript 中，当我们对一个变量赋值时，显然不需要考虑它的类型，因此，JavaScript是一门典型的动态类型语言。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`动态类型语言对变量类型的宽容给实际编码带来了很大的灵活性。\n由于无需进行类型检测，我们可以尝试调用任何对象的任意方法，而无需去考虑它原本是否被设计为拥有该方法。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`这一切都建立在鸭子类型(duck typing)的概念上，鸭子类型的通俗说法是:“如果它走起 路来像鸭子，叫起来也是鸭子，那么它就是鸭子。”`}</MDXTag>\n</MDXTag>\n</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}
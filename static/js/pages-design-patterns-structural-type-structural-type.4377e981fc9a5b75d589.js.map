{"version":3,"sources":["webpack:///./pages/design-patterns/structural-type/structural-type.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href"],"mappings":"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","file":"static/js/pages-design-patterns-structural-type-structural-type.731b8c78.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"结构型模式\"}}>{`结构型模式`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`结构型模式的目的就是封装对象之间的组合关系`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`这些设计模式关注类和对象的组合。继承的概念被用来组合接口和定义组合对象获得新功能的方式。`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`适配器模式（Adapter Pattern）`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`桥接模式（Bridge Pattern）`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`过滤器模式（Filter、Criteria Pattern）`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`组合模式（Composite Pattern）`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`装饰器模式（Decorator Pattern）`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`外观模式（Facade Pattern）`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`享元模式（Flyweight Pattern）`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`代理模式（Proxy Pattern）`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"代理模式\"}}>{`代理模式`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/assets/pdf/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5.pdf\"}}>{`JavaScript设计模式与开发实践`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`为你想访问的对象增加一个包装，以后再使用中都会访问这个包装，包装在与对象相连。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`代理模式是一种非常有意义的模式，在生活中可以找到很多代理模式的场景。比如，明星都有经纪人作为代理。\n如果想请明星来办一场商业演出，只能联系他的经纪人。经纪人会把商业演出的细节和报酬都谈好之后，再把合同交给明星签。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`代理模式的关键是，当客户不方便直接访问一个对象或者不满足需要的时候，提供一个替身对象来控制对这个对象的访问，\n客户实际上访问的是替身对象。替身对象对请求做出一些处理之后，再把请求转交给本体对象。   `}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"保护代理和虚拟代理\"}}>{`保护代理和虚拟代理`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`保护代理用于控制不同权限的对象对目标对象的访问。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`经纪人会把一些演出舞台地点不好的、报酬太低的合同给直接 pass 掉，这是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`保护代理`}</MDXTag>{`。 演员可以不被这些麻烦事给影响。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`保护代理`}</MDXTag>{` 用于控制不同权限的对象对目标对象的访问。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`请一位明星表演需要花费很多的钱， 所以一般只有在真正需要的时候才会请明星，这是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`虚拟代理`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`虚拟代理`}</MDXTag>{` 把一些开销很大的对象，延迟到真正需要它的时候才去创建。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`代理模式的变体种类非常多，限于篇幅及其在 JavaScript 中的适用性，本章只简约介绍一下\n这些代理，就不一一详细展开说明了。`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`防火墙代理:控制网络资源的访问，保护主题不让“坏人”接近。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`远程代理:为一个对象在不同的地址空间提供局部代表，在 Java 中，远程代理可以是另一个虚拟机中的对象。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`保护代理:用于对象应该有不同访问权限的情况。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`智能引用代理:取代了简单的指针，它在访问对象时执行一些附加操作，比如计算一个\n对象被引用的次数。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`写时复制代理:通常用于复制一个庞大对象的情况。写时复制代理延迟了复制的过程，\n当对象被真正修改时，才对它进行复制操作。写时复制代理是虚拟代理的一种变体，DLL (操作系统中的动态链接库)是其典型运用场景。`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"小结\"}}>{`小结`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`代理模式包括许多小分类，在 JavaScript 开发中最常用的是虚拟代理和缓存代理。\n虽然代理模式非常有用，但我们在编写业务代码的时候，往往不需要去预先猜测是否需要使用代理模式。\n当真正发现不方便直接访问某个对象的时候，再编写代理也不迟。`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}
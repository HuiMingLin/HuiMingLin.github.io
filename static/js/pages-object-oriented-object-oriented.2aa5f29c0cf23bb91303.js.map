{"version":3,"sources":["webpack:///./pages/object-oriented/object-oriented.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName"],"mappings":"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","file":"static/js/pages-object-oriented-object-oriented.cca32075.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h2\" components={components} props={{\"id\":\"原型模式-（原型）\"}}><MDXTag name=\"strong\" components={components} parentName=\"h2\">{` 原型模式 （原型）`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{` 对象把 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"strong\">{`__proto__`}</MDXTag>{` 委托给构造器的原型 `}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`JavaScript 给对象提供了一个名为 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`__proto__`}</MDXTag>{` 的隐藏属性， 某个对象的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`__proto__`}</MDXTag>{` 默认会指向它的构造函数的原型对象，\n即 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`(Constructor).prototype`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在一些谷歌浏览器会暴露出来:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`  var a = new Object();\n  console.log(a.__proto__ === Object.prototype)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`可以通过原型访问当前对象没有的属性，当 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Object.prototype`}</MDXTag>{` 也没有该属性的时候，\n它会像 Object.prototype 的原型上找，但是 Object.prototype 的原型是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`null`}</MDXTag>{`,\n说明这时候原型链后面已经没有其他原型了，这时候会返回 undefined。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`当通过 Object.create(null) 可以创建出没有原型的对象。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"this\"}}><MDXTag name=\"strong\" components={components} parentName=\"h2\">{` this `}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{` 在运行时基于函数的执行环境决定，并非函数被声明时的执行环境 `}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`除去不常用的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`with`}</MDXTag>{` 和 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`eval`}</MDXTag>{`， 剩下的大致分为 4 种：`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`作为对象的方法调用 （事件绑定函数调用也是，刚学可能不知道）`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`作为普通函数调用`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`作为构造器调用`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Function.prototype.call 或 Function.prototype.apply 或 Function.prototype.bind 调用。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"1、作为对象的方法调用\"}}>{`1、作为对象的方法调用`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`当函数作为对象的方法被调用时，this 指向当前对象`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`普通对象`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`  var obj = {\n    a: 1,\n    getA: function(){\n      alert ( this === obj ); // 输出:true\n      alert ( this.a ); // 输出: 1\n    }\n  }\n  obj.getA();\n`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`事件绑定函数`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`  var btn = document.getElementById(\"btn\")\n  btn.onclick = function () {\n    // do sth.\n  }\n  btn.addEventListener(event type, function ()) {\n    // do sth.\n  }\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"2、作为普通函数调用\"}}>{`2、作为普通函数调用`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`当函数作为普通函数调用时，this 指向全局对象，即为 window`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`普通创建函数`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`  window.name = \"globalName\"\n  var getName = function () {\n    return this.name\n  }\n  console.log(getName()) // globalName\n`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`将某个对象的方法复制给一个全局变量`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`  window.name = \"globalName\"\n  var myObjct = {\n    name: \"myObjct\",\n    getName: function () {\n      var abc = function () {\n        return this.name\n      }\n      return this.name\n    }\n  }\n  var getName = myObjct.getName\n  console.log(getName()) // globalName\n`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`对象方法的内部有一个局部函数`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`  window.name = \"globalName\"\n  var myObjct = {\n    name: \"myObjct\",\n    getName: function () {\n      var abc = function () {\n        return this.name\n      }\n      return abc()\n    }\n  }\n  console.log(myObjct.getName()) // globalName\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3、作为构造器调用\"}}>{`3、作为构造器调用`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`当函数作为构造器调用时，this 指向当前实例对象。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`当用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`new`}</MDXTag>{` 运算符调用函数时，该函数总会返回一个对象，\n通常情况下，构造器里的 this 就指向返回的这个对象。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`    var Contructor = function () {\n        this.name = \"class\"\n    }\n    var obj = new Contructor()\n    console.log(obj.name) // class\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`当使用 new 调用构造器的时候，\n还需要注意一点，如果构造器显示的返一个 object 类型的对象，\n那么最终会返回这个对象，而不是我们之前的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`this`}</MDXTag>{`。\n如果不显示返回数据，或者返回一个不是对象的数据，就不会造成这个问题。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`    var Contructor = function () {\n        this.name = \"class\"\n        return {\n            name: 'single'\n        }\n    }\n    var obj = new Contructor()\n    console.log(obj.name) // single\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"4、functionprototypecall-或-functionprototypeapply-或-functionprototypebind-调用\"}}>{`4、Function.prototype.call 或 Function.prototype.apply 或 Function.prototype.bind 调用`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`可以动态的修改当前 this 对象`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`    var obj1 = {\n        name: 'obj1',\n        getName: function () {\n            return this.name;\n        }\n    };\n    var obj2 = {\n        name: 'obj2'\n    };\n    console.log(obj1.getName())             // obj1\n    console.log(obj1.getName.call(obj2))    // obj2\n    console.log(obj1.getName.apply(obj2))   // obj2\n    console.log(obj1.getName.bind(obj2)())  // obj2\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"借用其他对象的方法\"}}><MDXTag name=\"strong\" components={components} parentName=\"h2\">{` 借用其他对象的方法 `}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`实现类似继承`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`    var A = function( name ){\n        this.name = name;\n    };\n    var B = function(){\n        A.apply( this, arguments );\n    };\n    B.prototype.getName = function(){\n        return this.name;\n    };\n    var b = new B( 'sven' ）\n    console.log( b.getName() ); // 输出: 'sven'\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}
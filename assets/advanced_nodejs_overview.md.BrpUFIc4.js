import{_ as a,c as e,o as r,a1 as t}from"./chunks/framework.DwaB85k5.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{"menu":"NodeJs"},"headers":[],"relativePath":"advanced/nodejs/overview.md","filePath":"advanced/nodejs/overview.md","lastUpdated":1717275443000}'),o={name:"advanced/nodejs/overview.md"},i=t('<h2 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h2><h3 id="架构" tabindex="-1">架构 <a class="header-anchor" href="#架构" aria-label="Permalink to &quot;架构&quot;">​</a></h3><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h3><h4 id="模块" tabindex="-1">模块 <a class="header-anchor" href="#模块" aria-label="Permalink to &quot;模块&quot;">​</a></h4><p>exports = module.exports = xxx</p><p>require：用来引用模块</p><p>export：用来导出模块，包括标识符（identifier）和模块内容（contents），返回的是引用，同步加载</p><p>module.exports： 对外导出的对象只能有 1 个。 module.xxx： 对外导出的值可以是多个。</p><p>当多次引用一个模块时，该模块只会加载一次，其他情况下都在缓存中加载，不需要重新加载。</p><h4 id="原生的-web-server" tabindex="-1">原生的 web server <a class="header-anchor" href="#原生的-web-server" aria-label="Permalink to &quot;原生的 web server&quot;">​</a></h4><h4 id="原生的局限性与框架的必要性" tabindex="-1">原生的局限性与框架的必要性 <a class="header-anchor" href="#原生的局限性与框架的必要性" aria-label="Permalink to &quot;原生的局限性与框架的必要性&quot;">​</a></h4><h2 id="术语" tabindex="-1">术语 <a class="header-anchor" href="#术语" aria-label="Permalink to &quot;术语&quot;">​</a></h2><h3 id="lts-长期支持-long-term-support-有官方支持-一般为-奇数版本" tabindex="-1">LTS 长期支持（Long-Term Support）有官方支持，一般为 奇数版本 <a class="header-anchor" href="#lts-长期支持-long-term-support-有官方支持-一般为-奇数版本" aria-label="Permalink to &quot;LTS 长期支持（Long-Term Support）有官方支持，一般为 奇数版本&quot;">​</a></h3><h3 id="current-尝鲜版本-一般为偶数版本" tabindex="-1">current 尝鲜版本 一般为偶数版本 <a class="header-anchor" href="#current-尝鲜版本-一般为偶数版本" aria-label="Permalink to &quot;current 尝鲜版本 一般为偶数版本&quot;">​</a></h3><h2 id="引擎" tabindex="-1">引擎 <a class="header-anchor" href="#引擎" aria-label="Permalink to &quot;引擎&quot;">​</a></h2><h3 id="google-v8" tabindex="-1">Google V8 <a class="header-anchor" href="#google-v8" aria-label="Permalink to &quot;Google V8&quot;">​</a></h3><h3 id="chakacore" tabindex="-1">chakacore <a class="header-anchor" href="#chakacore" aria-label="Permalink to &quot;chakacore&quot;">​</a></h3><h2 id="场景" tabindex="-1">场景 <a class="header-anchor" href="#场景" aria-label="Permalink to &quot;场景&quot;">​</a></h2><h3 id="构建传统网站-前后端不分离" tabindex="-1">构建传统网站（前后端不分离） <a class="header-anchor" href="#构建传统网站-前后端不分离" aria-label="Permalink to &quot;构建传统网站（前后端不分离）&quot;">​</a></h3><h3 id="构建-api-http-实现" tabindex="-1">构建 api，http 实现 <a class="header-anchor" href="#构建-api-http-实现" aria-label="Permalink to &quot;构建 api，http 实现&quot;">​</a></h3><h3 id="rpc-remote-procedure-call-远程过程调用" tabindex="-1">rpc（remote procedure call 远程过程调用） <a class="header-anchor" href="#rpc-remote-procedure-call-远程过程调用" aria-label="Permalink to &quot;rpc（remote procedure call 远程过程调用）&quot;">​</a></h3><p>tcp 实现</p><p>java Dubbo、google Grpc、DNode、微服务工具集 Seneca</p><h3 id="前后端分离" tabindex="-1">前后端分离 <a class="header-anchor" href="#前后端分离" aria-label="Permalink to &quot;前后端分离&quot;">​</a></h3><h4 id="前端页面静态化-page-static" tabindex="-1">前端页面静态化（Page Static） <a class="header-anchor" href="#前端页面静态化-page-static" aria-label="Permalink to &quot;前端页面静态化（Page Static）&quot;">​</a></h4><h4 id="前端页面服务化-paas-page-as-service" tabindex="-1">前端页面服务化（PAAS， Page as Service） <a class="header-anchor" href="#前端页面服务化-paas-page-as-service" aria-label="Permalink to &quot;前端页面服务化（PAAS， Page as Service）&quot;">​</a></h4><h4 id="服务端渲染-ssr-server-side-render" tabindex="-1">服务端渲染（SSR，Server Side Render） <a class="header-anchor" href="#服务端渲染-ssr-server-side-render" aria-label="Permalink to &quot;服务端渲染（SSR，Server Side Render）&quot;">​</a></h4><h4 id="渐进式-web-应用-pwa-progressive-web-app" tabindex="-1">渐进式 Web 应用（PWA，Progressive Web App） <a class="header-anchor" href="#渐进式-web-应用-pwa-progressive-web-app" aria-label="Permalink to &quot;渐进式 Web 应用（PWA，Progressive Web App）&quot;">​</a></h4><h4 id="serverless-函数即服务-function-as-a-service-faas" tabindex="-1">Serverless 函数即服务（Function as a Service，FaaS） <a class="header-anchor" href="#serverless-函数即服务-function-as-a-service-faas" aria-label="Permalink to &quot;Serverless 函数即服务（Function as a Service，FaaS）&quot;">​</a></h4><h3 id="dirt-数据密集型实时程序-data-intensive-real-time" tabindex="-1">DIRT 数据密集型实时程序，Data-Intensive Real-Time <a class="header-anchor" href="#dirt-数据密集型实时程序-data-intensive-real-time" aria-label="Permalink to &quot;DIRT 数据密集型实时程序，Data-Intensive Real-Time&quot;">​</a></h3><h3 id="代理" tabindex="-1">代理 <a class="header-anchor" href="#代理" aria-label="Permalink to &quot;代理&quot;">​</a></h3><p>反向代理 Nginx anyproxy node-http-proxy mini-proxy node-crawler</p><h3 id="爬虫" tabindex="-1">爬虫 <a class="header-anchor" href="#爬虫" aria-label="Permalink to &quot;爬虫&quot;">​</a></h3><p>node-crawler</p><h3 id="命令行工具" tabindex="-1">命令行工具 <a class="header-anchor" href="#命令行工具" aria-label="Permalink to &quot;命令行工具&quot;">​</a></h3><h3 id="微服务" tabindex="-1">微服务 <a class="header-anchor" href="#微服务" aria-label="Permalink to &quot;微服务&quot;">​</a></h3><h3 id="微信公众号开发" tabindex="-1">微信公众号开发 <a class="header-anchor" href="#微信公众号开发" aria-label="Permalink to &quot;微信公众号开发&quot;">​</a></h3><h3 id="ssr" tabindex="-1">SSR <a class="header-anchor" href="#ssr" aria-label="Permalink to &quot;SSR&quot;">​</a></h3><p>Next.js Umi</p><h3 id="c-c-扩展" tabindex="-1">C/C++扩展 <a class="header-anchor" href="#c-c-扩展" aria-label="Permalink to &quot;C/C++扩展&quot;">​</a></h3><p>NAN（Native Abstractions for）Node.js 开发简单 N-API 扩展模块跨版本</p><h3 id="跨平台" tabindex="-1">跨平台 <a class="header-anchor" href="#跨平台" aria-label="Permalink to &quot;跨平台&quot;">​</a></h3><p>前端 Web/H5 移动端 Hybrid PC 客户端</p><h3 id="后端" tabindex="-1">后端 <a class="header-anchor" href="#后端" aria-label="Permalink to &quot;后端&quot;">​</a></h3><p>核心特性/Web 应用/Api RPC/测试/运维/最佳实践 微服务、厂商支持</p><h3 id="前端" tabindex="-1">前端 <a class="header-anchor" href="#前端" aria-label="Permalink to &quot;前端&quot;">​</a></h3><p>React/Vue/Angular 应用实践 架构</p><h3 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">​</a></h3><h4 id="各种预编译、构建、脚手架、命令行" tabindex="-1">各种预编译、构建、脚手架、命令行 <a class="header-anchor" href="#各种预编译、构建、脚手架、命令行" aria-label="Permalink to &quot;各种预编译、构建、脚手架、命令行&quot;">​</a></h4><h4 id="webpack-gulp、工程化、模块化" tabindex="-1">Webpack/Gulp、工程化、模块化 <a class="header-anchor" href="#webpack-gulp、工程化、模块化" aria-label="Permalink to &quot;Webpack/Gulp、工程化、模块化&quot;">​</a></h4><p>模块规范 CommonJS 加载器 webmake，打包器 Browerify、Webpack、Ykit AMD 加载器：require.js，打包器：r.js seajs ES6 加载器：system.js ，打包器：webpack</p><h4 id="dataurl、imagemin-图片压缩" tabindex="-1">dataurl、imagemin 图片压缩 <a class="header-anchor" href="#dataurl、imagemin-图片压缩" aria-label="Permalink to &quot;dataurl、imagemin 图片压缩&quot;">​</a></h4><h2 id="安全" tabindex="-1">安全 <a class="header-anchor" href="#安全" aria-label="Permalink to &quot;安全&quot;">​</a></h2><p>异常捕获 uncaughtException 自动重启 forever node 进程管理工具 pm2 https HSTS （HTTP Strict Transport Security） helmet</p><h2 id="集群" tabindex="-1">集群 <a class="header-anchor" href="#集群" aria-label="Permalink to &quot;集群&quot;">​</a></h2><p>小集群 Cluster 解决单台服务器多核并发 大集群 负载均衡流量分发 Nginx HAProxy ali SLB（Tengine）</p><h2 id="技巧" tabindex="-1">技巧 <a class="header-anchor" href="#技巧" aria-label="Permalink to &quot;技巧&quot;">​</a></h2><p>code 命令 调试 本地调试 远程调试 性能调优 node-clinic alinode</p><h2 id="express" tabindex="-1">Express <a class="header-anchor" href="#express" aria-label="Permalink to &quot;Express&quot;">​</a></h2><div><a href="/advanced/nodejs/express">Express</a></div><h2 id="koa" tabindex="-1">Koa <a class="header-anchor" href="#koa" aria-label="Permalink to &quot;Koa&quot;">​</a></h2><div><a href="/advanced/nodejs/Koa">Koa</a></div><h2 id="egg" tabindex="-1">Egg <a class="header-anchor" href="#egg" aria-label="Permalink to &quot;Egg&quot;">​</a></h2><div><a href="/advanced/nodejs/egg">Egg</a></div><h2 id="工具-1" tabindex="-1">工具 <a class="header-anchor" href="#工具-1" aria-label="Permalink to &quot;工具&quot;">​</a></h2><div><a href="/advanced/nodejs/tool">工具</a></div>',66),h=[i];function l(n,d,s,c,u,p){return r(),e("div",null,h)}const m=a(o,[["render",l]]);export{q as __pageData,m as default};

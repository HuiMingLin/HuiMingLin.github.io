import{_ as l,c as i,o as e,a1 as t}from"./chunks/framework.DwaB85k5.js";const d=JSON.parse('{"title":"简历模板","description":"","frontmatter":{},"headers":[],"relativePath":"personal/resume/template.md","filePath":"personal/resume/template.md","lastUpdated":1717379903000}'),a={name:"personal/resume/template.md"},x=t('<h1 id="简历模板" tabindex="-1">简历模板 <a class="header-anchor" href="#简历模板" aria-label="Permalink to &quot;简历模板&quot;">​</a></h1><ul><li><p>团队工程标准规范</p><ul><li>项目概述：为降低多人协同的开发成本，提高开发效率，提高统一的前端开发脚手架支持基于 ToC 和 ToB 常见业务场景一键接入开发模板与 lint 校验；</li><li>技术栈：EsLint、StyleLint、CommitLint、MarkdownLint、husky；</li><li>项目成果： <ul><li>通过 Monorepo 和 Pnpm 的多包管理方式开发，基于 Git Action 实现 CI 自动化发布；</li><li>通过 ChangeSets 实现 CHANGELOG 的自动化更新；</li><li>制定团队内 EsLint、StyleLint、CommitLint、MarkdownLint、Husky 等工具规范；</li><li>对于存量代码不符合规范的问题，支持一键扫描和一键修复，一键式的修复存量问题，最小化存量代码的更新成本；</li><li>实现一键接入新增项目，通过结合 Git Pre-Commit 钩子，对提交文件进行编码规范的扫描；同时通过 Husky 的 Commit-Msg 钩子，对带你提交 message 的格式进行扫描。</li></ul></li></ul></li><li><p>低代码 项目概述：基于 xxxx 业务场景，提供涵盖数据源管理与加工、页面组装、流程引擎、低代码编辑器、AI 辅助数据建模、AI 托管式应用构建的低代码研发平台；</p><ul><li>技术栈：Vue、Vue Router、Vue-CLI、Webpack Plugin、monaco-editor；</li><li>项目成果： <ul><li>负责平台技术选型，基础架构及方案设计，包含：工程化相关方案设计与落地、各模块方案设计与核心实现；</li><li>主导页面组装模块设计，选用通用 BlockSuite 方案，使页面元素丰富且高度可定制；</li><li>AI 数据建模及应用创建模块选用 NodeJs 服务，借助 LangChainjs 构建端到端语言模型服务；</li><li>基于 Monaco-Editor 实现低代码编辑器复杂功能，包含自动补全、语法提示灯 LSP 服务相关内容；</li><li>主导封装 Webpack Plugin 及 Loader 支持静态资源自动上传、源码脱敏防备、构建优化等。</li></ul></li></ul></li><li><p>xxxx 后台管理系统 项目概述：针对 xxxx 场景下的后台管理系统，支持 xxxx 的业务能力；</p><ul><li>技术栈：Vue、Vue Router、Vue-CLI、Webpack；</li><li>项目成果： <ul><li>负责 xxxx 项目的日常迭代和研发；</li><li>主导通用表单及复杂表达逻辑处理的 schema 设计，运用插件化机制实现插拔式表单项与规则接入，提升了 xxxx 的开发人力成本；</li><li>负责 xxx 项目的登录功能，页面登录时使用 Vuex 存在 Token，配置动态的跳转路径，使用 Axios 在请求拦截器中设置拦截登出逻辑，实现菜单角色隔离的能力；</li><li>主导开发 xxxx 模块，基于 xxxx 技术方案实现 xxxx 的能力，减少 xxxx 的开发时间；</li><li>优化用户体验交互，使用 xxxx 能力提升页面首屏加载性能，从原本 1s 降低至 0.5s。</li></ul></li></ul></li><li><p>xxxx 小程序</p><ul><li>项目概述：负责小程序的日常迭代；</li><li>技术栈：微信小程序、JavaScript、Postman；</li><li>项目成果： <ul><li>负责小程序端的开发工作，使用 JavaScript 语言，采用 postman 测试对应接口；</li><li>熟练使用官方 API，实现视频播放，微信支付，视频与资料购买，留言，客服，官方公告，个人信息相关模块的开发；</li><li>通过添加原生缓冲属性解决 IOS 播放大于 500M 视频异常问题</li><li>通过优化小程序内部跳转 URL 和页面显示逻辑实现多页面重用；</li><li>使用 Async/Await 解决循环请求数据处理问题；</li><li>使用 FLex 弹性布局解决界面相关的对齐居中等问题。</li></ul></li></ul></li><li><p>xxxx 后台管理系统</p><ul><li>项目概述：负责 Web、小程序端的业务研发；</li><li>技术栈：Vue3、Vue-Router、Vuex、Webpack；</li><li>项目成果： <ul><li>使用 Vue3 以及周边工具 Vue-Router，Vuex 整合开发；</li><li>使用类 JSONForm 方案解决表单自动生成，相互依赖，以及实时更新的功能；</li><li>使用多种第三方库实现业务定制功能 Cropper.js（图片裁剪），Html2Canvas（截图），Qrcode.js（二维码生成）等等；</li><li>使用 Vue3 SSR 的特性实现多端保存以及展示对应的模板；</li><li>使用 Webpack 完成项目工程化的基本配置，打包及调优。</li></ul></li></ul></li></ul>',2),o=[x];function u(s,n,r,p,c,m){return e(),i("div",null,o)}const V=l(a,[["render",u]]);export{d as __pageData,V as default};

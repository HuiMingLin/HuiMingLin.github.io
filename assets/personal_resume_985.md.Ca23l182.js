import{_ as a,c as e,o as l,a1 as i}from"./chunks/framework.DwaB85k5.js";const _=JSON.parse('{"title":"985、211","description":"","frontmatter":{},"headers":[],"relativePath":"personal/resume/985.md","filePath":"personal/resume/985.md","lastUpdated":1717379903000}'),t={name:"personal/resume/985.md"},r=i('<h1 id="_985、211" tabindex="-1">985、211 <a class="header-anchor" href="#_985、211" aria-label="Permalink to &quot;985、211&quot;">​</a></h1><h2 id="个人信息" tabindex="-1">个人信息 <a class="header-anchor" href="#个人信息" aria-label="Permalink to &quot;个人信息&quot;">​</a></h2><p>张小川 blog 地址 985 本科/软件工程 github 地址 16 年毕业</p><h2 id="专业技能" tabindex="-1">专业技能 <a class="header-anchor" href="#专业技能" aria-label="Permalink to &quot;专业技能&quot;">​</a></h2><ul><li>熟练掌握前端开发技术（HTML5、JavaScript、TypeScript、ES6、CSS3 等）</li><li>熟练使用 React Native 及 Vue 全家桶、了解 Angular 框架</li><li>对页面重构以及 CSS 领域相关有全面且深入细致的研究与产出</li><li>对 Web 动画（CSS 动画、JavaScript 动画、SVG 动画）有大量研究及实践</li><li>对浏览器渲染原理、页面性能优化、有过深入了解及实践</li><li>熟练使用 Webpack、Vite 等构建打包工具，对前端工程化有过深入了解及实践</li><li>掌握计算机网络基础、对前端网络安全有一定的研究</li></ul><h2 id="个人荣誉" tabindex="-1">个人荣誉 <a class="header-anchor" href="#个人荣誉" aria-label="Permalink to &quot;个人荣誉&quot;">​</a></h2><ul><li>个人 Github 上有 2 个 3000+stars 仓库，多个 500+star 仓库，个人 followers3000+</li><li>博客园、掘金、Segment Fault 等技术网站专栏作者，各大博客平台、公众号发表超 100 篇高质量前端相关技术文章，阅读数超 500 万</li><li>xx 年，xx 年 xx 优秀员工，xx 内部优秀讲师。xx 内部技术社区发布原创技术文章 xx 篇，全部获得编辑推荐，xx 篇为当日头条</li></ul><h2 id="工作经历" tabindex="-1">工作经历 <a class="header-anchor" href="#工作经历" aria-label="Permalink to &quot;工作经历&quot;">​</a></h2><ul><li>2016 年-2020 年 xxx 互联网大厂 资深 Web 前端开发工程师 <ul><li>负责 xx 视频 Hybrid App 开发，负责登录付费，成长体系，运营活动等部分核心功能的 Web 开发 <ul><li>使用内部自研 XX 框架、XX 框架等，对 App 中的 Webview 页面进行诸多性能优化，在硬件设备性能较低的情况下实现页面的极速打开</li></ul></li><li>负责团队内前端工程化建设，前端相关 CI/CD 建设，前端性能监控及优化、完善日志体系、监控系统、告警机制</li></ul></li></ul><h2 id="项目经验" tabindex="-1">项目经验 <a class="header-anchor" href="#项目经验" aria-label="Permalink to &quot;项目经验&quot;">​</a></h2><p>XX 视频 TV 端 App 登录付费等核心功能的 Hippy 化改造</p><ul><li>采用内部自研 Hippy 框架（类 React Native）对原 Webview 页面进行重构，在 TV 行业硬件设备性能低的情况下，提升页面打开渲染效率近 1 倍，核心页面首屏渲染时间在 2s 之内</li><li>针对 TV 交互的特殊性及用户版本升级缓慢等问题，对 XX 框架进行相应改造提升，客户端层面实现 xx 包插件化，JSBundle 热部署能力，框架层面优化动画的执行渲染方式，自研焦点组件，TVListView 组件、新增渐变阴影等能力，极大提升用户体验</li><li>通过对 JSBundle 分析，进行分包优化，公共包进行客户端预加载。对分包后的核心业务 JSBundle 进行择时预拉取，并且实现一套静态资源预缓存机制。核心页面实现秒开，首屏加载时间居行业第一</li></ul>',12),o=[r];function s(n,u,h,c,d,p){return l(),e("div",null,o)}const b=a(t,[["render",s]]);export{_ as __pageData,b as default};

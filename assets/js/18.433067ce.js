(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{375:function(s,t,a){"use strict";a.r(t);var e=a(25),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[s._v("#")]),s._v(" 性能优化")]),s._v(" "),a("h2",{attrs:{id:"内联首屏关键css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内联首屏关键css"}},[s._v("#")]),s._v(" 内联首屏关键CSS")]),s._v(" "),a("p",[s._v("在打开一个页面时，页面首要内容出现在屏幕的时间影响着用户的体验，而通过内联CSS关键代码能够使浏览器在下载完HTML后就能立刻渲染。")]),s._v(" "),a("p",[s._v("而如果外部引用CSS代码，在解析HTML结构过程中遇到外部CSS文件，才会开始下载CSS代码，再渲染。")]),s._v(" "),a("p",[s._v("所以，CSS内联使用使渲染时间提前。")]),s._v(" "),a("p",[s._v("注意：但是较大的CSS代码并不合适内联（初始拥塞窗口、没有缓存），而其余代码则采取外部引用方式。")]),s._v(" "),a("h2",{attrs:{id:"异步加载css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步加载css"}},[s._v("#")]),s._v(" 异步加载CSS")]),s._v(" "),a("p",[s._v("在CSS文件请求、下载、解析完成之前，CSS会阻塞渲染，浏览器将不会渲染任何已处理的内容。")]),s._v(" "),a("p",[s._v("前面加载内联代码后，后面的外部引用CSS则没必要阻塞浏览器渲染。这时候就可以采取异步加载的方案，主要有如下：")]),s._v(" "),a("p",[s._v("使用JavaScript将link标签插到head标签最后")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建link标签")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" myCSS "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"link"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmyCSS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rel "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stylesheet"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmyCSS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("href "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mystyles.css"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 插入到header的最后位置")]),s._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertBefore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myCSS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childNodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("childNodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextSibling"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("设置link标签media属性为noexis，浏览器会认为当前样式表不适用当前类型，会在不阻塞页面渲染的情况下再进行下载。加载完成后，将media的值设为screen或all，从而让浏览器开始解析CSS")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("link rel"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stylesheet"')]),s._v(" href"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mystyles.css"')]),s._v(" media"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"noexist"')]),s._v(" onload"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"this.media='all'\"")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("通过rel属性将link元素标记为alternate可选样式表，也能实现浏览器异步加载。同样别忘了加载完成之后，将rel设回stylesheet")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("link rel"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"alternate stylesheet"')]),s._v(" href"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mystyles.css"')]),s._v(" onload"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"this.rel='stylesheet'\"")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"资源压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源压缩"}},[s._v("#")]),s._v(" 资源压缩")]),s._v(" "),a("p",[s._v("利用webpack、gulp/grunt、rollup等模块化工具，将CSS代码进行压缩，使文件变小，大大降低了浏览器的加载时间。")]),s._v(" "),a("h2",{attrs:{id:"合理使用选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合理使用选择器"}},[s._v("#")]),s._v(" 合理使用选择器")]),s._v(" "),a("p",[s._v("CSS匹配的规则是从右往左开始匹配，例如#markdown .content h3匹配规则如下：")]),s._v(" "),a("ul",[a("li",[s._v("先找到h3标签元素")]),s._v(" "),a("li",[s._v("然后去除祖先不是.content的元素")]),s._v(" "),a("li",[s._v("最后去除祖先不是#markdown的元素")])]),s._v(" "),a("p",[s._v("如果嵌套的层级更多，页面中的元素更多，那么匹配所要花费的时间代价自然更高。")]),s._v(" "),a("p",[s._v("所以我们在编写选择器的时候，可以遵循以下规则：")]),s._v(" "),a("ul",[a("li",[s._v("不要嵌套使用过多复杂选择器，最好不要三层以上")]),s._v(" "),a("li",[s._v("使用id选择器就没必要再进行嵌套")]),s._v(" "),a("li",[s._v("通配符和属性选择器效率最低，避免使用")])]),s._v(" "),a("h2",{attrs:{id:"减少使用昂贵的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少使用昂贵的属性"}},[s._v("#")]),s._v(" 减少使用昂贵的属性")]),s._v(" "),a("p",[s._v("在页面发生重绘的时候，昂贵属性如box-shadow/border-radius/filter/透明度/:nth-child等，会降低浏览器的渲染性能。")]),s._v(" "),a("h2",{attrs:{id:"不要使用-import"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不要使用-import"}},[s._v("#")]),s._v(" 不要使用@import")]),s._v(" "),a("p",[s._v("CSS样式文件有两种引入方式，一种是link元素，另一种是@import。")]),s._v(" "),a("p",[s._v("@import会影响浏览器的并行下载，使得页面在加载时增加额外的延迟，增添了额外的往返耗时。")]),s._v(" "),a("p",[s._v("而且多个@import可能会导致下载顺序紊乱。")]),s._v(" "),a("p",[s._v('比如一个CSS文件index.css包含了以下内容：@import url("reset.css")。')]),s._v(" "),a("p",[s._v("那么浏览器就必须先把index.css下载、解析和执行后，才下载、解析和执行第二个文件reset.css。")]),s._v(" "),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[s._v("#")]),s._v(" 其他")]),s._v(" "),a("ul",[a("li",[s._v("减少重排操作，以及减少不必要的重绘")]),s._v(" "),a("li",[s._v("了解哪些属性可以继承而来，避免对这些属性重复编写")]),s._v(" "),a("li",[s._v("CSS Sprite，合成所有icon图片，用宽高加上background-position的背景图方式显现出我们要的- icon图，减少了HTTP请求")]),s._v(" "),a("li",[s._v("把小的icon图片转成Base64编码")]),s._v(" "),a("li",[s._v("CSS3动画或者过渡尽量使用transform和opacity来实现动画，不要使用left和top属性")])])])}),[],!1,null,null,null);t.default=n.exports}}]);
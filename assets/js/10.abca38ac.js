(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{207:function(e,t,n){"use strict";n.r(t);var a=n(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[e._v("#")]),e._v(" 事件")]),e._v(" "),n("h2",{attrs:{id:"事件触发的三阶段："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事件触发的三阶段："}},[e._v("#")]),e._v(" 事件触发的三阶段：")]),e._v(" "),n("p",[e._v("事件触发有三个阶段：")]),e._v(" "),n("ul",[n("li",[e._v("window 往事件注册处传播，遇到注册的捕获事件会触发")]),e._v(" "),n("li",[e._v("传播到事件注册处时触发注册的事件")]),e._v(" "),n("li",[e._v("从事件注册处往 window 传播，遇到注册的冒泡事件会触发")])]),e._v(" "),n("p",[e._v("事件传播过程")]),e._v(" "),n("p",[e._v("事件触发一般来说会按照上面的顺序进行，")]),e._v(" "),n("p",[n("img",{attrs:{src:"/assets/images/event-steam.jpg",alt:""}})]),e._v(" "),n("p",[e._v("但是也有特例")]),e._v(" "),n("p",[e._v("** 如果给一个 body 中的子节点同时注册冒泡和捕获事件，事件触发会按照注册的顺序执行。**")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("  // 以下会先打印冒泡然后是捕获\n  node.addEventListener(\n    'click',\n    event => {\n      console.log('冒泡')\n    },\n    false\n  )\n  node.addEventListener(\n    'click',\n    event => {\n      console.log('捕获 ')\n    },\n    true\n  )\n")])])]),n("h2",{attrs:{id:"注册事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注册事件"}},[e._v("#")]),e._v(" 注册事件")]),e._v(" "),n("p",[e._v("在 "),n("code",[e._v("DOM1")]),e._v(" 中通过 "),n("code",[e._v("node['on' + type]")]),e._v(" 绑定事件， type 为事件类型")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("  node.onclick = function () {}\n")])])]),n("p",[e._v("在 "),n("code",[e._v("DOM3")]),e._v(" 中通过 "),n("code",[e._v("node.addEventListener('type', callback, capture)")])]),e._v(" "),n("p",[e._v("通常我们使用 "),n("code",[e._v("addEventListener")]),e._v(" 注册事件，该函数的第三个参数可以是布尔值，也可以是对象。对于布尔值 "),n("code",[e._v("useCapture")]),e._v(" 参数来说，该参数默认值为 "),n("code",[e._v("false")]),e._v(" ，"),n("code",[e._v("useCapture")]),e._v(" 决定了注册的事件是捕获事件还是冒泡事件。对于对象参数来说，可以使用以下几个属性")]),e._v(" "),n("ul",[n("li",[e._v("capture：布尔值，和 useCapture 作用一样")]),e._v(" "),n("li",[e._v("once：布尔值，值为 true 表示该回调只会调用一次，调用后会移除监听")]),e._v(" "),n("li",[e._v("passive：布尔值，表示永远不会调用 preventDefault")])]),e._v(" "),n("h2",{attrs:{id:"阻止事件冒泡"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#阻止事件冒泡"}},[e._v("#")]),e._v(" 阻止事件冒泡")]),e._v(" "),n("p",[e._v("一般来说，如果我们只希望事件只触发在目标上，这时候可以使用 "),n("code",[e._v("stopPropagation")]),e._v(" 来阻止事件的进一步传播。通常我们认为 "),n("code",[e._v("stopPropagation")]),e._v(" 是用来阻止事件冒泡的，其实该函数也可以阻止捕获事件。"),n("code",[e._v("stopImmediatePropagation")]),e._v(" 同样也能实现阻止事件，但是还能阻止该事件目标执行别的注册事件。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("  node.addEventListener(\n    'click',\n    event => {\n      event.stopImmediatePropagation()\n      console.log('冒泡')\n    },\n    false\n  )\n  // 点击 node 只会执行上面的函数，该函数不会执行\n  node.addEventListener(\n    'click',\n    event => {\n      console.log('捕获 ')\n    },\n    true\n  )\n")])])]),n("h2",{attrs:{id:"事件代理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事件代理"}},[e._v("#")]),e._v(" 事件代理")]),e._v(" "),n("p",[e._v("如果一个节点中的子节点是动态生成的，那么子节点需要 "),n("code",[e._v("注册事件的话应该注册在父节点上")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("  <ul id=\"ul\">\n    <li>1</li>\n      <li>2</li>\n    <li>3</li>\n    <li>4</li>\n    <li>5</li>\n  </ul>\n  <script>\n    let ul = document.querySelector('#ul')\n    ul.addEventListener('click', (event) => {\n      console.log(event.target);\n    })\n  <\/script>\n")])])]),n("p",[e._v("事件代理的方式相较于直接给目标注册事件来说，有以下优点：")]),e._v(" "),n("ul",[n("li",[e._v("节省内存")]),e._v(" "),n("li",[e._v("不需要给子节点注销事件")])])])}),[],!1,null,null,null);t.default=s.exports}}]);
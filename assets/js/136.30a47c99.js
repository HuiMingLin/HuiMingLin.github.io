(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{489:function(a,t,e){"use strict";e.r(t);var s=e(25),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"以前的技术"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#以前的技术"}},[a._v("#")]),a._v(" 以前的技术")]),a._v(" "),e("p",[a._v("Web是World Wide Web的简称，中文译为万维网我们可以将它规划成如下的几个时代来进行理解")]),a._v(" "),e("ul",[e("li",[a._v("石器时代")]),a._v(" "),e("li",[a._v("文明时代")]),a._v(" "),e("li",[a._v("工业革命时代")]),a._v(" "),e("li",[a._v("百花齐放时代")])]),a._v(" "),e("h2",{attrs:{id:"石器时代"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#石器时代"}},[a._v("#")]),a._v(" 石器时代")]),a._v(" "),e("p",[a._v("石器时代指的就是我们的静态网页，可以欣赏一下1997的Apple官网")]),a._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/vue/stone-age.png",alt:"alt 属性文本"}})]),a._v(" "),e("p",[a._v("最早的网页是没有数据库的，可以理解成就是一张可以在网络上浏览的报纸，直到CGI技术的出现通过 CGI Perl 运行一小段代码与数据库或文件系统进行交互，如当时的Google（1998年）")]),a._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/vue/1998-google-page.png",alt:"alt 属性文本"}})]),a._v(" "),e("h2",{attrs:{id:"文明时代"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文明时代"}},[a._v("#")]),a._v(" 文明时代")]),a._v(" "),e("p",[a._v("ASP，JSP大家应该都不会太陌生，最早出现于 2005 年左右，先后出现了微软的 ASP 和 Java Server Pages [JSP] 等技术,取代了 CGI ，增强了 WEB 与服务端的交互的安全性，类似于下面这样，其实就是Java + HTML")]),a._v(" "),e("div",{staticClass:"language-jsp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<%@ page language="java" contentType="text/html; charset=utf-8"\n    pageEncoding="utf-8"%><title>JSP demo</title>\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("JSP有一个很大的缺点，就是不太灵活，因为JSP是在服务器端执行的，通常返回该客户端的就是一个HTML文本。我们每次的请求：获取的数据、内容的加载，都是服务器为我们返回渲染完成之后的 DOM，这也就使得我们开发网站的灵活度大打折扣在这种情况下，同年：Ajax火了(小细节，这里为什么说火了，因为 Ajax 技术并不是 2005 年出现的，他的雏形是 1999 年)，现在看来很常见的技术手段，在当时可是珍贵无比")]),a._v(" "),e("h2",{attrs:{id:"工业革命时代"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工业革命时代"}},[a._v("#")]),a._v(" 工业革命时代")]),a._v(" "),e("p",[a._v("到这里大家就更熟悉了，移动设备的普及，Jquery的出现，以及SPA（Single Page Application 单页面应用）的雏形，Backbone EmberJS AngularJS 这样一批前端框架随之出现，但当时SPA的路不好走，例如SEO问题，SPA 过多的页面、复杂场景下 View 的绑定等，都没有很好的处理经过这几年的飞速发展，节约了开发人员大量的精力、降低了开发者和开发过程的门槛，极大提升了开发效率和迭代速度，我们可以称之其为工业时代")]),a._v(" "),e("h2",{attrs:{id:"百花齐放时代"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#百花齐放时代"}},[a._v("#")]),a._v(" 百花齐放时代")]),a._v(" "),e("p",[a._v("这里没有文字，放一张图感受一下")]),a._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/vue/history-web.png",alt:"alt 属性文本"}})]),a._v(" "),e("p",[a._v("PS：这里为什么要说这么多Web的历史，我们可以看到Web技术的变化之大与快，每一种新的技术出现都是一些特定场景的解决方案，那我们今天的主角Vue又是为了解决什么呢？我们接着往下看")]),a._v(" "),e("h2",{attrs:{id:"mpa-multipage-page-application"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mpa-multipage-page-application"}},[a._v("#")]),a._v(" MPA（MultiPage-page application）")]),a._v(" "),e("p",[a._v("每个页面都是一个主页面，都是独立的当我们在访问另一个页面的时候，都需要重新加载html、css、js文件，公共文件则根据需求按需加载如下图")]),a._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/vue/vue2/mpa.png",alt:"alt 属性文本"}})])])}),[],!1,null,null,null);t.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{386:function(l,t,e){"use strict";e.r(t);var o=e(25),n=Object(o.a)({},(function(){var l=this,t=l.$createElement,e=l._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[e("h1",{attrs:{id:"起源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#起源"}},[l._v("#")]),l._v(" 起源")]),l._v(" "),e("blockquote",[e("ul",[e("li",[l._v("设计模式并非是软件开发的专业术语。实际上，“模式”最早诞生于建筑学。\n20世纪70年代 哈佛大学建筑学博士Christopher Alexander和他的研究团队花了约20年的时间，\n研究了为解决同一个问题而设计出的不同建筑结构，从中发现了那些高质量设计中的相似性，并且用“模式”来指 代这种相似性。")])])]),l._v(" "),e("blockquote",[e("ul",[e("li",[l._v("受Christopher Alexander工作的启发，Erich Gamma、Richard Helm、Ralph Johnson、John Vlissides四人(人称Gang Of Four ，GoF)\n把这种“模式”观点应用于面向对象的软件设计中， 并且总结了23种常见的软件开发设计模式，录入《设计模式:可复用面向对象软件的基础》一书。")])])]),l._v(" "),e("blockquote",[e("ul",[e("li",[l._v("设计模式的定义是:在面向对象软件设计过程中针对特定问题的简洁而优雅的解决方案。")])])]),l._v(" "),e("blockquote",[e("ul",[e("li",[l._v("通俗一点说，设计模式是在某种场合下对某个问题的一种解决方案。\n如果再通俗一点说，设计模式就是给面向对象软件开发中的一些好的设计取个名字。")])])]),l._v(" "),e("blockquote",[e("ul",[e("li",[l._v("在 JavaScript 中，当我们对一个变量赋值时，显然不需要考虑它的类型，因此，JavaScript是一门典型的动态类型语言。")])])]),l._v(" "),e("blockquote",[e("ul",[e("li",[l._v("动态类型语言对变量类型的宽容给实际编码带来了很大的灵活性。\n由于无需进行类型检测，我们可以尝试调用任何对象的任意方法，而无需去考虑它原本是否被设计为拥有该方法。")])])]),l._v(" "),e("blockquote",[e("ul",[e("li",[l._v("这一切都建立在鸭子类型(duck typing)的概念上，鸭子类型的通俗说法是:“如果它走起 路来像鸭子，叫起来也是鸭子，那么它就是鸭子。”")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);
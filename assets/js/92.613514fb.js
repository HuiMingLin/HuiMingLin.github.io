(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{449:function(a,t,s){"use strict";s.r(t);var v=s(25),_=Object(v.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"微信小程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微信小程序"}},[a._v("#")]),a._v(" 微信小程序")]),a._v(" "),s("h2",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[a._v("#")]),a._v(" 背景")]),a._v(" "),s("p",[a._v("在传统的网页开发中，渲染线程和脚本是互斥的，这也是为什么长时间的脚本运行可能会导致页面失去响应的原因，因为我们常说的 JS 是单线程的。而微信小程序则选用了 Hybrid 的渲染方式，将视图层和逻辑层分开，实现双线程同时运行。在此模式下，视图层的界面使用 WebView 进行渲染，而逻辑层则在 JSCore 中运行。")]),a._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/mini-program/architecture.png",alt:"alt 属性文本"}})]),a._v(" "),s("p",[a._v("在小程序中，渲染层主要负责界面渲染相关的任务，并在 WebView 线程里执行。一个小程序可能存在多个界面，所以渲染层存在多个 WebView 线程。而逻辑层则采用 JsCore 线程运行 JS 脚本，执行的都是与小程序业务逻辑有关的代码。")]),a._v(" "),s("h2",{attrs:{id:"由来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#由来"}},[a._v("#")]),a._v(" 由来")]),a._v(" "),s("p",[a._v("当微信中的WebView逐渐成为移动Web的一个重要入口时,微信就有相关的JS-SDK。JS-SDK解决了移动网页能力不足的问题,但没有解决体验不良的问题。")]),a._v(" "),s("p",[a._v("为此,小程序应运而生,具有:")]),a._v(" "),s("ul",[s("li",[a._v("快速加载")]),a._v(" "),s("li",[a._v("更强大的能力")]),a._v(" "),s("li",[a._v("原生体验")]),a._v(" "),s("li",[a._v("易用的微信数据开放")]),a._v(" "),s("li",[a._v("高效简单的开发")])]),a._v(" "),s("p",[a._v("小程序页面本质上是网页,技术模型与H5类似,只是自定义了WXML标签。")]),a._v(" "),s("h2",{attrs:{id:"通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通信"}},[a._v("#")]),a._v(" 通信")]),a._v(" "),s("p",[a._v("在小程序的渲染层，宿主环境会将wxml转化成对应的JS对象。当逻辑层的数据发生变更时，通过宿主环境提供的setData方法，数据就可以从逻辑层传递到渲染层。然后通过对比数据变化前后的差异，将差异应用在原来的Dom树上，从而渲染出正确的视图。")]),a._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/mini-program/dom-mounte.png",alt:"alt 属性文本"}})]),a._v(" "),s("p",[a._v("由于小程序是基于双线程的，因此在视图层和逻辑层之间的任何数据传递都是线程间的通信，会有一定的延时。所以在小程序中，页面更新成了异步操作。异步会使得各部分的运行时序变得复杂一些，逻辑层与渲染层需要有一定的机制保证时序正确，在每个小程序页面的生命周期中，存在着若干次页面数据通信。")]),a._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/mini-program/patch.png",alt:"alt 属性文本"}})]),a._v(" "),s("h2",{attrs:{id:"运行机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行机制"}},[a._v("#")]),a._v(" 运行机制")]),a._v(" "),s("p",[a._v("小程序启动运行主要有两种情况：")]),a._v(" "),s("ul",[s("li",[a._v("冷启动（重新开始）：用户首次打开或者小程序被微信主动销毁后再次打开的情况，此时小程序需要重新加载启动，即为冷启动")]),a._v(" "),s("li",[a._v("热启动：用户已经打开过小程序，然后在一定时间内再次打开该小程序，此时无需重新启动，只需要将后台态的小程序切换到前台，这个过程就是热启动")])]),a._v(" "),s("p",[a._v("需要注意的是：")]),a._v(" "),s("ul",[s("li",[a._v("小程序没有重启的概念")]),a._v(" "),s("li",[a._v("当小程序进入后台，客户端会维持一段时间的运行状态，超过一定时间后会被微信主动销毁")]),a._v(" "),s("li",[a._v("短时间内收到系统两次以上内存警告，也会对小程序进行销毁，这也就为什么一旦页面内存溢出，页面会奔溃的本质原因了")])]),a._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/mini-program/load.png",alt:"alt 属性文本"}})]),a._v(" "),s("h2",{attrs:{id:"支付流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#支付流程"}},[a._v("#")]),a._v(" 支付流程")]),a._v(" "),s("p",[a._v("流程大致如下：")]),a._v(" "),s("ul",[s("li",[a._v("用户通过分享或扫描二维码进入商户小程序，用户选择购买，完成选购流程。")]),a._v(" "),s("li",[a._v("调起微信支付控件，用户开始输入支付密码。")]),a._v(" "),s("li",[a._v("密码验证通过，支付成功。商户后台得到支付成功的通知。")]),a._v(" "),s("li",[a._v("返回商户小程序，显示购买成功。")]),a._v(" "),s("li",[a._v("微信支付公众号下发支付凭证。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/mini-program/pay-overview.png",alt:"alt 属性文本"}})]),a._v(" "),s("h3",{attrs:{id:"详细流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#详细流程"}},[a._v("#")]),a._v(" 详细流程")]),a._v(" "),s("p",[a._v("以电商小程序为例，支付流程图如下：")]),a._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/mini-program/pay-flow.png",alt:"alt 属性文本"}})]),a._v(" "),s("p",[a._v("具体操作流程如下：")]),a._v(" "),s("ul",[s("li",[a._v("打开小程序，点击直接下单。此时，小程序会调用wx.login获取用户临时登录凭证code，然后发送到后端服务器换取openId。")]),a._v(" "),s("li",[a._v("用户下单，小程序需要将购买的商品Id，商品数量，以及用户的openId传送到服务器。")]),a._v(" "),s("li",[a._v("服务器在接收到商品Id、商品数量、openId后，生成订单数据。同时，通过签名算法，向微信支付发送请求，获取预付单信息（prepay_id）。然后，服务器会将获取的数据再次进行签名，向小程序端响应必要的信息。")]),a._v(" "),s("li",[a._v("小程序端在获取对应的参数后，调用wx.requestPayment()发起微信支付，唤醒支付工作台，进行支付。")]),a._v(" "),s("li",[a._v("接下来，用户会进行微信支付密码、指纹等验证。确认支付之后，微信后台进行鉴权，直接返回给前端支付的结果。前端收到返回数据后对支付结果进行展示。")]),a._v(" "),s("li",[a._v("最后，微信后台在给前端返回支付的结果后，也会向后台返回一个支付结果。后台通过这个支付结果来更新订单的状态。")])]),a._v(" "),s("p",[a._v("以下是后端响应数据和wx.requestPayment方法所需要的参数示例：")]),a._v(" "),s("div",{staticClass:"language-wx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("wx.requestPayment({\n  // 时间戳\n  timeStamp: '',\n  // 随机字符串\n  nonceStr: '',\n  // 统一下单接口返回的 prepay_id 参数值\n  package: '',\n  // 签名类型\n  signType: '',\n  // 签名\n  paySign: '',\n  // 调用成功回调\n  success () {},\n  // 失败回调\n  fail () {},\n  // 接口调用结束回调\n  complete () {}\n})\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br")])]),s("p",[a._v("参数表如下所示：")]),a._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/mini-program/pay-params.webp",alt:"alt 属性文本"}})]),a._v(" "),s("h3",{attrs:{id:"支付安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#支付安全"}},[a._v("#")]),a._v(" 支付安全")]),a._v(" "),s("p",[a._v("对于支付的安全，微信小程序采用了多重安全措施。")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("首先，微信支付是基于HTTPS传输加密数据，采用安全协议来保证信息传输的安全性。")])]),a._v(" "),s("li",[s("p",[a._v("其次，微信支付服务提供了商户证书下发、报文签名以及商户数据包（MD5）校验等多种安全机制来防止信息被篡改。")])]),a._v(" "),s("li",[s("p",[a._v("此外，用户的支付信息如银行卡号、密码、验证码等信息均不会保存在商户系统或者微信系统，即使在微信服务器被攻破，也无法获取用户的真实支付信息。")])]),a._v(" "),s("li",[s("p",[a._v("最后，微信支付还为用户提供了交易过程中的安全保障，通过多种风险控制系统为用户拦截可疑交易。")])])]),a._v(" "),s("h2",{attrs:{id:"优化速度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化速度"}},[a._v("#")]),a._v(" 优化速度")]),a._v(" "),s("h3",{attrs:{id:"加载优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加载优化"}},[a._v("#")]),a._v(" 加载优化")]),a._v(" "),s("ul",[s("li",[a._v("控制代码包体积,及时清理无用代码")]),a._v(" "),s("li",[a._v("使用子包按需加载,减少主包体积")]),a._v(" "),s("li",[a._v("预加载子包,避免首次点击卡顿")])]),a._v(" "),s("h3",{attrs:{id:"渲染优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染优化"}},[a._v("#")]),a._v(" 渲染优化")]),a._v(" "),s("ul",[s("li",[a._v("onLoad阶段发请求,不等待onReady")]),a._v(" "),s("li",[a._v("缓存本地数据,减少不必要的网络请求")]),a._v(" "),s("li",[a._v("合并setData调用,避免频繁刷新界面")]),a._v(" "),s("li",[a._v("抽离自定义组件,减少主界面渲染压力")])]),a._v(" "),s("h3",{attrs:{id:"首屏优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首屏优化"}},[a._v("#")]),a._v(" 首屏优化")]),a._v(" "),s("ul",[s("li",[a._v("预请求数据,利用缓存数据构建首屏")]),a._v(" "),s("li",[a._v("采用骨架屏 placeholders 占位")]),a._v(" "),s("li",[a._v("提前预加载资源包")])]),a._v(" "),s("h3",{attrs:{id:"启动优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动优化"}},[a._v("#")]),a._v(" 启动优化")]),a._v(" "),s("ul",[s("li",[a._v("显示加载图标避免白屏")]),a._v(" "),s("li",[a._v("合理制定启动图片大小")])]),a._v(" "),s("h3",{attrs:{id:"长列表优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#长列表优化"}},[a._v("#")]),a._v(" 长列表优化")]),a._v(" "),s("ul",[s("li",[a._v("虚拟列表,减少DOM节点")]),a._v(" "),s("li",[a._v("预加载可视区域外图片")]),a._v(" "),s("li",[a._v("图片懒加载,滚动到可视区再加载")])]),a._v(" "),s("h3",{attrs:{id:"打包策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包策略"}},[a._v("#")]),a._v(" 打包策略")]),a._v(" "),s("ul",[s("li",[a._v("压缩代码,上传时启用代码压缩")]),a._v(" "),s("li",[a._v("按功能拆分子包")]),a._v(" "),s("li",[a._v("删除无用文件,精简资源体积")])]),a._v(" "),s("h2",{attrs:{id:"路由跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由跳转"}},[a._v("#")]),a._v(" 路由跳转")]),a._v(" "),s("h3",{attrs:{id:"wx-navigateto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wx-navigateto"}},[a._v("#")]),a._v(" wx.navigateTo")]),a._v(" "),s("p",[a._v("保留当前页面,跳转到应用内的某个页面。可以使用wx.navigateBack回到原页面。")]),a._v(" "),s("p",[a._v("特点:页面栈增多,占用内存。")]),a._v(" "),s("p",[a._v("参数:")]),a._v(" "),s("div",{staticClass:"language-wx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("{\n  url: 'test?id=1' // 需要跳转的应用内非 tabBar 的页面的路径\n} \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"wx-redirectto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wx-redirectto"}},[a._v("#")]),a._v(" wx.redirectTo")]),a._v(" "),s("p",[a._v("关闭当前页面,跳转到应用内的某个页面。")]),a._v(" "),s("p",[a._v("特点:不能回到原页面,页面栈不增加。")]),a._v(" "),s("p",[a._v("参数:")]),a._v(" "),s("div",{staticClass:"language-wx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("{\n  url: 'test?id=1' // 需要跳转的应用内非 tabBar 的页面的路径\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"wx-navigateback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wx-navigateback"}},[a._v("#")]),a._v(" wx.navigateBack")]),a._v(" "),s("p",[a._v("关闭当前页面,返回上一页面或多级页面。")]),a._v(" "),s("p",[a._v("特点:页面栈逐级退出,减少内存占用。")]),a._v(" "),s("p",[a._v("参数:")]),a._v(" "),s("div",{staticClass:"language-wx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("{\n  delta: 1 // 返回的页面数\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"wx-relaunch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wx-relaunch"}},[a._v("#")]),a._v(" wx.reLaunch")]),a._v(" "),s("p",[a._v("关闭所有页面,打开到应用内的某个页面。")]),a._v(" "),s("p",[a._v("特点:页面栈清空只留下新的页面。")]),a._v(" "),s("p",[a._v("参数:")]),a._v(" "),s("div",{staticClass:"language-wx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("{\n  url: 'test' // 需要跳转的页面路径 \n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h2",{attrs:{id:"登录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#登录"}},[a._v("#")]),a._v(" 登录")]),a._v(" "),s("h3",{attrs:{id:"获取code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取code"}},[a._v("#")]),a._v(" 获取code")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("用户在小程序内点击登录按钮")])]),a._v(" "),s("li",[s("p",[a._v("调用wx.login()获取code")])])]),a._v(" "),s("h3",{attrs:{id:"获取openid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取openid"}},[a._v("#")]),a._v(" 获取openid")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("将code发送到开发者服务器")])]),a._v(" "),s("li",[s("p",[a._v("开发者服务器使用code向微信服务器获取openid和session_key")])])]),a._v(" "),s("h3",{attrs:{id:"校验openid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#校验openid"}},[a._v("#")]),a._v(" 校验openid")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("开发者服务器拿到openid,去数据库查询是否已存在")])]),a._v(" "),s("li",[s("p",[a._v("若不存在,表示新用户,创建新记录")])]),a._v(" "),s("li",[s("p",[a._v("若存在,校验用户信息,生成自定义登录态")])])]),a._v(" "),s("h3",{attrs:{id:"返回登录态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#返回登录态"}},[a._v("#")]),a._v(" 返回登录态")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("开发者服务器将登录态返回给小程序")])]),a._v(" "),s("li",[s("p",[a._v("小程序存储登录态到本地")])])]),a._v(" "),s("h3",{attrs:{id:"校验登录态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#校验登录态"}},[a._v("#")]),a._v(" 校验登录态")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("小程序重新启动时可校验登录态")])]),a._v(" "),s("li",[s("p",[a._v("调用wx.checkSessionAPI验证登录态是否过期")])]),a._v(" "),s("li",[s("p",[a._v("过期则重新执行登录流程,未过期则继续使用")])])]),a._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/mini-program/login.png",alt:"alt 属性文本"}})]),a._v(" "),s("h2",{attrs:{id:"生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[a._v("#")]),a._v(" 生命周期")]),a._v(" "),s("h3",{attrs:{id:"应用生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用生命周期"}},[a._v("#")]),a._v(" 应用生命周期")]),a._v(" "),s("p",[a._v("应用生命周期函数定义在app.js中")]),a._v(" "),s("ul",[s("li",[a._v("onLaunch\t小程序初始化完成时触发(全局只触发一次)")]),a._v(" "),s("li",[a._v("onShow\t小程序启动,或从后台进入前台显示时触发")]),a._v(" "),s("li",[a._v("onHide\t小程序从前台进入后台时触发")]),a._v(" "),s("li",[a._v("onError\t小程序发生脚本错误或API调用报错时触发")]),a._v(" "),s("li",[a._v("onPageNotFound\t小程序要打开的页面不存在时触发")]),a._v(" "),s("li",[a._v("onUnhandledRejection\t小程序有未处理的Promise拒绝时触发")]),a._v(" "),s("li",[a._v("onThemeChange\t系统切换主题时触发")])]),a._v(" "),s("h3",{attrs:{id:"页面生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面生命周期"}},[a._v("#")]),a._v(" 页面生命周期")]),a._v(" "),s("p",[a._v("页面生命周期函数在page.js中定义。")]),a._v(" "),s("ul",[s("li",[a._v("onLoad\t页面加载时触发\t用于加载页面数据")]),a._v(" "),s("li",[a._v("onShow\t页面显示时触发\t页面重新显示时刷新数据")]),a._v(" "),s("li",[a._v("onReady\t页面初次渲染完成时触发\t获取页面 DOM 节点")]),a._v(" "),s("li",[a._v("onHide\t页面隐藏时触发\t停止页面动画或计时器等")]),a._v(" "),s("li",[a._v("onUnload\t页面卸载时触发\t停止网络请求或清理订阅等")])]),a._v(" "),s("h3",{attrs:{id:"组件生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件生命周期"}},[a._v("#")]),a._v(" 组件生命周期")]),a._v(" "),s("p",[a._v("组件生命周期函数在component.js中定义。")]),a._v(" "),s("ul",[s("li",[a._v("created\t组件实例刚创建时触发")]),a._v(" "),s("li",[a._v("attached\t组件进入页面节点树时触发")]),a._v(" "),s("li",[a._v("ready\t组件首次渲染完成时触发")]),a._v(" "),s("li",[a._v("moved\t组件位置改变时触发")]),a._v(" "),s("li",[a._v("detached\t组件离开页面节点树时触发")]),a._v(" "),s("li",[a._v("error\t组件方法错误时触发")])]),a._v(" "),s("h3",{attrs:{id:"执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行顺序"}},[a._v("#")]),a._v(" 执行顺序")]),a._v(" "),s("p",[a._v("一个典型的完整生命周期顺序为:")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("小程序打开:onLaunch -> onShow -> onLoad -> onShow -> onReady")])]),a._v(" "),s("li",[s("p",[a._v("进入新页面:onHide -> onLoad -> onShow -> onReady")])]),a._v(" "),s("li",[s("p",[a._v("返回上一页:onUnload -> onShow")])]),a._v(" "),s("li",[s("p",[a._v("小程序切后台:onHide")])]),a._v(" "),s("li",[s("p",[a._v("小程序重启:onLaunch -> onShow")])])]),a._v(" "),s("h2",{attrs:{id:"优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[a._v("#")]),a._v(" 优缺点")]),a._v(" "),s("p",[a._v("优点:")]),a._v(" "),s("ul",[s("li",[a._v("随用随走,代替许多APP")]),a._v(" "),s("li",[a._v("借助平台流量,易被接受")]),a._v(" "),s("li",[a._v("相对安全")]),a._v(" "),s("li",[a._v("开发门槛低")]),a._v(" "),s("li",[a._v("降低兼容性限制")])]),a._v(" "),s("p",[a._v("缺点:")]),a._v(" "),s("ul",[s("li",[a._v("用户留存率不高")]),a._v(" "),s("li",[a._v("体积限制,无法开发大型小程序")]),a._v(" "),s("li",[a._v("受限于微信管控,自由度较低")])]),a._v(" "),s("p",[a._v("微信小程序结合了APP和网页的优点,为用户和开发者带来便利,但也存在自身的限制。以其便捷性为先,逐步优化体验,或可成为移动端一个重要的形式。")])])}),[],!1,null,null,null);t.default=_.exports}}]);
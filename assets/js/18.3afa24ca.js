(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{375:function(v,t,a){"use strict";a.r(t);var _=a(25),r=Object(_.a)({},(function(){var v=this,t=v.$createElement,a=v._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("p",[v._v("浏览器将页面从网络下载到本地后，主要做几个事情：解析HTML，创建DOM，同时加载依赖的资源：CSS、图片等（加载资源的过程不会阻塞DOM解析），然后调用渲染进程渲染到界面上。")]),v._v(" "),a("p",[v._v("这里需要注意一点，在现在浏览器中，为了减缓渲染被阻塞的情况，现代的浏览器都使用了预加载。当解析被阻塞的时候，浏览器会有一个轻量级的HTML（或CSS）扫描器（scanner）继续在文档中扫描，查找那些将来可能能够用到的资源文件的url，在渲染器使用它们之前将其下载下来。")]),v._v(" "),a("p",[v._v("把css的引入放在head，把js的引入放在body之后，如果js可以异步加载，也可以使用异步加载的方式。")]),v._v(" "),a("h2",{attrs:{id:"步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[v._v("#")]),v._v(" 步骤")]),v._v(" "),a("p",[v._v("浏览器的工作原理可以简单地概括为以下几个步骤：")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("用户输入URL：用户在浏览器地址栏输入URL或点击链接，触发浏览器的导航行为。")])]),v._v(" "),a("li",[a("p",[v._v("发送HTTP请求：浏览器向服务器发送HTTP请求，请求获取网页的资源，包括HTML、CSS、JavaScript文件以及其他相关的资源文件。")])]),v._v(" "),a("li",[a("p",[v._v("接收和解析响应：浏览器接收到服务器返回的HTTP响应，根据响应的内容类型进行解析。如果是HTML文件，则开始构建DOM树，同时解析CSS文件构建CSSOM树。如果有JavaScript文件，则执行JavaScript代码。")])]),v._v(" "),a("li",[a("p",[v._v("构建渲染树：浏览器将解析得到的DOM树和CSSOM树进行合并，构建出渲染树（Render Tree）。渲染树只包含需要显示的节点和对应的样式信息。")])]),v._v(" "),a("li",[a("p",[v._v("布局和绘制：浏览器根据渲染树进行布局（Layout）和绘制（Painting）。布局阶段确定每个节点在屏幕上的位置和大小，绘制阶段将渲染树转换为屏幕上的像素。")])]),v._v(" "),a("li",[a("p",[v._v("显示页面：浏览器将绘制得到的像素信息发送给显示器，显示页面内容在用户的屏幕上。")])]),v._v(" "),a("li",[a("p",[v._v("处理用户交互：浏览器监听用户的交互事件，例如鼠标点击、滚动等，根据事件执行相应的操作。这可能包括重新构建渲染树、重新布局和绘制。")])]),v._v(" "),a("li",[a("p",[v._v("定时器和异步任务：浏览器执行定时器任务和处理异步任务，例如延迟执行的JavaScript代码、网络请求等。")])])]),v._v(" "),a("p",[v._v("整个过程中，浏览器会不断地与服务器进行通信，下载和加载页面所需的资源，并将这些资源解析和渲染成用户可见的页面。同时，浏览器还负责处理用户的交互操作，并执行JavaScript代码来实现网页的动态效果和交互功能。")])])}),[],!1,null,null,null);t.default=r.exports}}]);
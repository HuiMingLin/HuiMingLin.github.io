import{_ as a,c as e,o as r,a1 as i}from"./chunks/framework.DwaB85k5.js";const g=JSON.parse('{"title":"编程方式","description":"","frontmatter":{},"headers":[],"relativePath":"basic/programming-paradigm/overview.md","filePath":"basic/programming-paradigm/overview.md","lastUpdated":1717277724000}'),o={name:"basic/programming-paradigm/overview.md"},t=i('<h1 id="编程方式" tabindex="-1">编程方式 <a class="header-anchor" href="#编程方式" aria-label="Permalink to &quot;编程方式&quot;">​</a></h1><h2 id="命令式编程" tabindex="-1">命令式编程 <a class="header-anchor" href="#命令式编程" aria-label="Permalink to &quot;命令式编程&quot;">​</a></h2><div><a href="/basic/programming-paradigm/imperative-programming/overview">命令式编程</a></div><h2 id="面向对象编程" tabindex="-1">面向对象编程 <a class="header-anchor" href="#面向对象编程" aria-label="Permalink to &quot;面向对象编程&quot;">​</a></h2><div><a href="/basic/programming-paradigm/object-oriented-programming/overview">面向对象编程</a></div><h2 id="函数式编程" tabindex="-1">函数式编程 <a class="header-anchor" href="#函数式编程" aria-label="Permalink to &quot;函数式编程&quot;">​</a></h2><div><a href="/basic/programming-paradigm/functional-programming/overview">函数式编程</a></div>',7),n=[t];function d(m,s,c,h,p,l){return r(),e("div",null,n)}const v=a(o,[["render",d]]);export{g as __pageData,v as default};

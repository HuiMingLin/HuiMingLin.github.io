import{_ as n,c as t,o as l,j as e}from"./chunks/framework.DwaB85k5.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{"menu":"脚手架"},"headers":[],"relativePath":"domain/engineering/scaffold.md","filePath":"domain/engineering/scaffold.md","lastUpdated":1717462821000}'),o={name:"domain/engineering/scaffold.md"},a=e("p",null,"编写脚手架工具的主要目的是为了简化项目的初始化和开发过程，提供一种标准化、规范化的项目结构和工作流。脚手架工具可以带来以下价值：",-1),s=e("ul",null,[e("li",null,"提高开发效率：脚手架提供了一键式的项目初始化，减少了手动创建和配置项目的时间，让开发人员能够更快地开始工作。"),e("li",null,"统一项目结构和规范：脚手架可以定义项目的标准结构、命名规范、代码风格等，帮助团队成员遵循统一的开发规范，提高项目的可维护性和协作效率。"),e("li",null,"提供常用功能和工具集成：脚手架可以集成常用的工具、框架和库，提供一些常见功能的快速实现，如路由配置、状态管理、构建工具等，减少重复劳动和错误。"),e("li",null,"简化部署和发布：脚手架可以提供简单的部署和发布流程，自动化处理构建、打包和发布的步骤，减少出错的可能性。")],-1),i=e("p",null,"主流脚手架并不能够满足我们的需求，因为我们定义了很多的项目模版，包括定制的插件，我们是微前端的项目，子项目近百个，很多地方的组件、插件都是通用的，所以我们自定义了脚手架的开发。",-1),c=[a,s,i];function d(r,_,f,p,u,m){return l(),t("div",null,c)}const $=n(o,[["render",d]]);export{g as __pageData,$ as default};
